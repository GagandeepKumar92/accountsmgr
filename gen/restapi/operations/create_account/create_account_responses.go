// Code generated by go-swagger; DO NOT EDIT.

package create_account

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"accountsmgr/gen/models"
)

// CreateAccountCreatedCode is the HTTP code returned for type CreateAccountCreated
const CreateAccountCreatedCode int = 201

/*CreateAccountCreated Created

swagger:response createAccountCreated
*/
type CreateAccountCreated struct {

	/*
	  In: Body
	*/
	Payload *models.Account `json:"body,omitempty"`
}

// NewCreateAccountCreated creates CreateAccountCreated with default headers values
func NewCreateAccountCreated() *CreateAccountCreated {

	return &CreateAccountCreated{}
}

// WithPayload adds the payload to the create account created response
func (o *CreateAccountCreated) WithPayload(payload *models.Account) *CreateAccountCreated {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create account created response
func (o *CreateAccountCreated) SetPayload(payload *models.Account) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateAccountCreated) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(201)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// CreateAccountBadRequestCode is the HTTP code returned for type CreateAccountBadRequest
const CreateAccountBadRequestCode int = 400

/*CreateAccountBadRequest Name should be at least 3 characters long

swagger:response createAccountBadRequest
*/
type CreateAccountBadRequest struct {

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateAccountBadRequest creates CreateAccountBadRequest with default headers values
func NewCreateAccountBadRequest() *CreateAccountBadRequest {

	return &CreateAccountBadRequest{}
}

// WithPayload adds the payload to the create account bad request response
func (o *CreateAccountBadRequest) WithPayload(payload *models.Error) *CreateAccountBadRequest {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create account bad request response
func (o *CreateAccountBadRequest) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateAccountBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(400)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

/*CreateAccountDefault error

swagger:response createAccountDefault
*/
type CreateAccountDefault struct {
	_statusCode int

	/*
	  In: Body
	*/
	Payload *models.Error `json:"body,omitempty"`
}

// NewCreateAccountDefault creates CreateAccountDefault with default headers values
func NewCreateAccountDefault(code int) *CreateAccountDefault {
	if code <= 0 {
		code = 500
	}

	return &CreateAccountDefault{
		_statusCode: code,
	}
}

// WithStatusCode adds the status to the create account default response
func (o *CreateAccountDefault) WithStatusCode(code int) *CreateAccountDefault {
	o._statusCode = code
	return o
}

// SetStatusCode sets the status to the create account default response
func (o *CreateAccountDefault) SetStatusCode(code int) {
	o._statusCode = code
}

// WithPayload adds the payload to the create account default response
func (o *CreateAccountDefault) WithPayload(payload *models.Error) *CreateAccountDefault {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the create account default response
func (o *CreateAccountDefault) SetPayload(payload *models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *CreateAccountDefault) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(o._statusCode)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
